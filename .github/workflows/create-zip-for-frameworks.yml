name: Create zip for XCFrameworks

on:
  push:
    branches:
      - release-*

permissions:
  contents: write  # Grant write permissions to GitHub Actions      

jobs:
  release:
    name: Build and Update Package.swift
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Release Version from Branch Name
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/release-||')
          echo "Extracted branch name: $BRANCH_NAME"
          if [[ "$BRANCH_NAME" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "NEW_TAG=$BRANCH_NAME" >> $GITHUB_ENV
            echo "$BRANCH_NAME" > new_tag.txt
          else
            echo "Branch name does not follow release-<version> format."
            exit 1
          fi

      - name: Clean Build Directory
        run: |
          rm -rf build
          rm -f checksums.txt

      - name: Zip XCFrameworks
        run: |
          mkdir -p build
          for framework in Frameworks/*.xcframework; do
            framework_name=$(basename "$framework" .xcframework)
            zip -r "build/${framework_name}.zip" "$framework"
          done

      - name: Compute Checksums
        run: |
          cd build
          for zip in *.zip; do
            checksum=$(swift package compute-checksum "$zip")
            echo "$zip: $checksum" >> ../checksums.txt
          done
          cat ../checksums.txt

      - name: Update Package.swift with Checksums
        run: |
          while IFS=: read -r zip checksum; do
            zip_file=$(echo $zip | xargs)  # Trim whitespace
            checksum=$(echo $checksum | xargs)  # Trim whitespace
            framework_name=$(basename "$zip_file" .zip)

            echo "Updating checksum for $framework_name: $checksum"

            # Debug: Check if sed finds the right lines
            grep "${framework_name}.zip" Package.swift || echo "No match found for $framework_name"
            
            # Update the release tag with NEW_TAG
            sed -i '' "s#https://github.com/cap-vinaynaikade/HydraSPM/releases/download/[0-9.]*/${framework_name}.zip#https://github.com/cap-vinaynaikade/HydraSPM/releases/download/${NEW_TAG}/${framework_name}.zip#" Package.swift

            # Use a temporary file for safe editing
            sed "s#\(url: .*${framework_name}.zip\", checksum: \)\"[^\"]*\"#\1\"${checksum}\"#" Package.swift > Package.swift.tmp && mv Package.swift.tmp Package.swift
          done < checksums.txt

          echo "Final Package.swift contents:"
          cat Package.swift

      - name: Remove checksum file
        run: |
          rm -f checksums.txt

      - name: Commit Updated Package.swift
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          git add .  # Add all changes, including untracked files
          
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          
          git commit -m "Update checksums in Package.swift"
          git push origin HEAD
